<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sicau.devicemanager.dao.RoleLocationMapper">

    <resultMap id="BaseResultMap" type="com.sicau.devicemanager.POJO.DO.RoleLocation">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="role_id" property="roleId" jdbcType="VARCHAR"/>
        <result column="location_id" property="locationId" jdbcType="VARCHAR"/>
        <result column="bind_time" property="bindTime" jdbcType="TIMESTAMP"/>
        <result column="operate_user_id" property="operateUserId" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, role_id, location_id, bind_time, operate_user_id
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from role_location
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <select id="selectByRoleId" resultType="com.sicau.devicemanager.POJO.DO.RoleLocation">
        SELECT *
        FROM role_location
        WHERE role_id = #{roleId}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete
        from role_location
        where id = #{id,jdbcType=VARCHAR}
    </delete>

    <insert id="insert" parameterType="com.sicau.devicemanager.POJO.DO.RoleLocation">
        insert into role_location (id, role_id, location_id, bind_time, operate_user_id)
        values (#{id,jdbcType=VARCHAR},
                #{roleId,jdbcType=VARCHAR},
                #{locationId,jdbcType=VARCHAR},
                #{bindTime,jdbcType=TIMESTAMP},
                #{operateUserId,jdbcType=VARCHAR})
    </insert>

    <insert id="insertSelective" parameterType="com.sicau.devicemanager.POJO.DO.RoleLocation">
        insert into role_location
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="locationId != null">
                location_id,
            </if>
            <if test="bindTime != null">
                bind_time,
            </if>
            <if test="operateUserId != null">
                operate_user_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=VARCHAR},
            </if>
            <if test="locationId != null">
                #{locationId,jdbcType=VARCHAR},
            </if>
            <if test="bindTime != null">
                #{bindTime,jdbcType=TIMESTAMP},
            </if>
            <if test="operateUserId != null">
                #{operateUserId,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.sicau.devicemanager.POJO.DO.RoleLocation">
        update role_location
        <set>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=VARCHAR},
            </if>
            <if test="locationId != null">
                location_id = #{locationId,jdbcType=VARCHAR},
            </if>
            <if test="bindTime != null">
                bind_time = #{bindTime,jdbcType=TIMESTAMP},
            </if>
            <if test="operateUserId != null">
                operate_user_id = #{operateUserId,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.sicau.devicemanager.POJO.DO.RoleLocation">
        update role_location
        set role_id         = #{roleId,jdbcType=VARCHAR},
            location_id     = #{locationId,jdbcType=VARCHAR},
            bind_time       = #{bindTime,jdbcType=TIMESTAMP},
            operate_user_id = #{operateUserId,jdbcType=VARCHAR}
        where id = #{id,jdbcType=VARCHAR}
    </update>

</mapper>